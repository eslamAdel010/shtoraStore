{"ast":null,"code":"var _jsxFileName = \"D:\\\\works\\\\zinger\\\\frontend\\\\src\\\\Contexts\\\\AppContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const categoryApi = 'http://127.0.0.1:8000/api/categories';\n  const productApi = 'http://127.0.0.1:8000/api/products';\n  const sizeApi = 'http://127.0.0.1:8000/api/sizes';\n  const orderApi = 'http://127.0.0.1:8000/api/orders';\n  const orderDetailesApi = 'http://127.0.0.1:8000/api/orderDetailes';\n  const [categories, setCategories] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [sizes, setSizes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState(null);\n  const [cards, setCards] = useState([]);\n  const [orderDetailes, setOrderDetailes] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const [categoriesResponse, orderDetailesResponse, productsResponse, sizesResponse] = await Promise.all([axios.get(categoryApi), axios.get(orderDetailesApi), axios.get(productApi), axios.get(sizeApi)]);\n        setCategories(categoriesResponse.data.categories);\n        serOrderDe(orderDetailesResponse.data.categories);\n        setProducts(productsResponse.data.products);\n        setSizes(sizesResponse.data.sizes);\n        const storedCards = JSON.parse(localStorage.getItem('cards')) || [];\n        setCards(storedCards);\n        setMessage('Data fetched successfully');\n      } catch (error) {\n        setError(error.message);\n        setMessage(`Error fetching data: ${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      categories,\n      products,\n      sizes,\n      orderApi,\n      isLoading,\n      error,\n      message,\n      cards\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"LNbT7UE6xIzHJNaRVapN4TAN8DE=\");\n_c = AppProvider;\nexport default AppContext;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AppContext","AppProvider","children","_s","categoryApi","productApi","sizeApi","orderApi","orderDetailesApi","categories","setCategories","products","setProducts","sizes","setSizes","isLoading","setIsLoading","error","setError","message","setMessage","cards","setCards","orderDetailes","setOrderDetailes","fetchData","categoriesResponse","orderDetailesResponse","productsResponse","sizesResponse","Promise","all","get","data","serOrderDe","storedCards","JSON","parse","localStorage","getItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/works/zinger/frontend/src/Contexts/AppContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AppContext = createContext();\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const categoryApi = 'http://127.0.0.1:8000/api/categories';\r\n  const productApi = 'http://127.0.0.1:8000/api/products';\r\n  const sizeApi = 'http://127.0.0.1:8000/api/sizes';\r\n  const orderApi = 'http://127.0.0.1:8000/api/orders';\r\n  const orderDetailesApi = 'http://127.0.0.1:8000/api/orderDetailes';\r\n\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [sizes, setSizes] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n  const [cards, setCards] = useState([]);\r\n  const [orderDetailes, setOrderDetailes] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n\r\n        const [categoriesResponse, orderDetailesResponse,productsResponse, sizesResponse] = await Promise.all([\r\n          axios.get(categoryApi),\r\n          axios.get(orderDetailesApi),\r\n          axios.get(productApi),\r\n          axios.get(sizeApi),\r\n        ]);\r\n\r\n        setCategories(categoriesResponse.data.categories);\r\n        serOrderDe(orderDetailesResponse.data.categories);\r\n        setProducts(productsResponse.data.products);\r\n        setSizes(sizesResponse.data.sizes);\r\n\r\n        const storedCards = JSON.parse(localStorage.getItem('cards')) || [];\r\n        setCards(storedCards);\r\n\r\n        setMessage('Data fetched successfully');\r\n      } catch (error) {\r\n        setError(error.message);\r\n        setMessage(`Error fetching data: ${error.message}`);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <AppContext.Provider value={{ categories, products, sizes, orderApi, isLoading, error, message, cards }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AppContext;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,gBAAGN,aAAa,CAAC,CAAC;AAElC,OAAO,MAAMO,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAMC,WAAW,GAAG,sCAAsC;EAC1D,MAAMC,UAAU,GAAG,oCAAoC;EACvD,MAAMC,OAAO,GAAG,iCAAiC;EACjD,MAAMC,QAAQ,GAAG,kCAAkC;EACnD,MAAMC,gBAAgB,GAAG,yCAAyC;EAGlE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC0B,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC4B,aAAa,EAAEC,gBAAgB,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,MAAM6B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACFT,YAAY,CAAC,IAAI,CAAC;QAElB,MAAM,CAACU,kBAAkB,EAAEC,qBAAqB,EAACC,gBAAgB,EAAEC,aAAa,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACpGlC,KAAK,CAACmC,GAAG,CAAC5B,WAAW,CAAC,EACtBP,KAAK,CAACmC,GAAG,CAACxB,gBAAgB,CAAC,EAC3BX,KAAK,CAACmC,GAAG,CAAC3B,UAAU,CAAC,EACrBR,KAAK,CAACmC,GAAG,CAAC1B,OAAO,CAAC,CACnB,CAAC;QAEFI,aAAa,CAACgB,kBAAkB,CAACO,IAAI,CAACxB,UAAU,CAAC;QACjDyB,UAAU,CAACP,qBAAqB,CAACM,IAAI,CAACxB,UAAU,CAAC;QACjDG,WAAW,CAACgB,gBAAgB,CAACK,IAAI,CAACtB,QAAQ,CAAC;QAC3CG,QAAQ,CAACe,aAAa,CAACI,IAAI,CAACpB,KAAK,CAAC;QAElC,MAAMsB,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;QACnEjB,QAAQ,CAACa,WAAW,CAAC;QAErBf,UAAU,CAAC,2BAA2B,CAAC;MACzC,CAAC,CAAC,OAAOH,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACE,OAAO,CAAC;QACvBC,UAAU,CAAC,wBAAwBH,KAAK,CAACE,OAAO,EAAE,CAAC;MACrD,CAAC,SAAS;QACRH,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IACDS,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE1B,OAAA,CAACC,UAAU,CAACwC,QAAQ;IAACC,KAAK,EAAE;MAAEhC,UAAU;MAAEE,QAAQ;MAAEE,KAAK;MAAEN,QAAQ;MAAEQ,SAAS;MAAEE,KAAK;MAAEE,OAAO;MAAEE;IAAM,CAAE;IAAAnB,QAAA,EACrGA;EAAQ;IAAAwC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE1B,CAAC;AAAC1C,EAAA,CArDWF,WAAW;AAAA6C,EAAA,GAAX7C,WAAW;AAuDxB,eAAeD,UAAU;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}